"use strict"

// –ï–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏ –∑ Canvas
// üß± –ë–∞–∑–æ–≤–µ –∑–Ω–∞–π–æ–º—Å—Ç–≤–æ –∑ canvas
	// üî≤ –°—Ç–≤–æ—Ä–∏—Ç–∏ canvas –≤ HTML —Ç–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ –Ω—å–æ–≥–æ –¥–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ JS.
	// ‚úèÔ∏è –ù–∞–º–∞–ª—é–≤–∞—Ç–∏ –ø—Ä–æ—Å—Ç—É –ª—ñ–Ω—ñ—é.
	// ‚ö´ –ù–∞–º–∞–ª—é–≤–∞—Ç–∏ –∫–æ–ª–æ —Ç–∞ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫.
	// üé® –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —Ä—ñ–∑–Ω—ñ –∫–æ–ª—å–æ—Ä–∏ –∑–∞–ª–∏–≤–∫–∏(fillStyle) —Ç–∞ –æ–±–≤–æ–¥–∫–∏(strokeStyle).
	// üñãÔ∏è –ù–∞–ø–∏—Å–∞—Ç–∏ —Ç–µ–∫—Å—Ç –Ω–∞ canvas.

// üß© –†–æ–±–æ—Ç–∞ –∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ —Ç–∞ —Ñ–æ—Ä–º–∞–º–∏
	// üîÉ –ù–∞–º–∞–ª—é–≤–∞—Ç–∏ –¥–µ–∫—ñ–ª—å–∫–∞ —Ñ—ñ–≥—É—Ä —É —Ä—ñ–∑–Ω–∏—Ö –ø–æ–∑–∏—Ü—ñ—è—Ö.
	// üìê –î–æ–¥–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é –º–∞–ª—é–≤–∞–Ω–Ω—è –∑–∞ –∫–ª—ñ–∫–æ–º –º–∏—à—ñ.
	// üßÆ –ü–æ–ø—Ä–∞–∫—Ç–∏–∫—É–≤–∞—Ç–∏—Å—è –∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏: —Ü–µ–Ω—Ç—Ä, –∫—É—Ç–∏, –≤—ñ–¥–Ω–æ—Å–Ω–µ –ø–æ–∑–∏—Ü—ñ–æ–Ω—É–≤–∞–Ω–Ω—è.
	// üßä –ù–∞–º–∞–ª—é–≤–∞—Ç–∏ —Å—ñ—Ç–∫—É(grid) –∑ –ª—ñ–Ω—ñ–π.

// üåÄ –ê–Ω—ñ–º–∞—Ü—ñ—ó
	// ‚è≥ –í–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ requestAnimationFrame –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–∞–∑–æ–≤–æ—ó –∞–Ω—ñ–º–∞—Ü—ñ—ó(—Ä—É—Ö –∫–æ–ª–∞).
	// ‚öôÔ∏è –î–æ–¥–∞—Ç–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å —à–≤–∏–¥–∫–æ—Å—Ç—ñ —Ç–∞ –Ω–∞–ø—Ä—è–º–∫—É —Ä—É—Ö—É.
	// üöÄ –°—Ç–≤–æ—Ä–∏—Ç–∏ bounce - –µ—Ñ–µ–∫—Ç(–≤—ñ–¥—Å–∫–æ–∫ –≤—ñ–¥ –∫—Ä–∞—ó–≤ canvas).
	// üåà –ê–Ω—ñ–º—É–≤–∞—Ç–∏ –∑–º—ñ–Ω—É –∫–æ–ª—å–æ—Ä—É –∞–±–æ —Ä–æ–∑–º—ñ—Ä—É –æ–±‚Äô—î–∫—Ç–∞.

// üñ±Ô∏è –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å
	// üñ±Ô∏è –î–æ–¥–∞—Ç–∏ —Ä–µ–∞–∫—Ü—ñ—é –Ω–∞ —Ä—É—Ö –º–∏—à—ñ ‚Äî –º–∞–ª—é–≤–∞—Ç–∏ –ª—ñ–Ω—ñ—ó –∫—É—Ä—Å–æ—Ä–æ–º.
	// ‚ú® –ó—Ä–æ–±–∏—Ç–∏ –µ—Ñ–µ–∫—Ç ‚Äútrail‚Äù (—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—è –∑–∞ –º–∏—à–∫–æ—é).
	// üéØ –†–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –∫–ª—ñ–∫ –ø–æ —Ñ—ñ–≥—É—Ä—ñ(–≤–∏—è–≤–ª–µ–Ω–Ω—è –ø–æ–ø–∞–¥–∞–Ω–Ω—è –≤ –∑–æ–Ω—É).
	// üí• –ó—Ä–æ–±–∏—Ç–∏ –µ—Ñ–µ–∫—Ç ‚Äú–≤–∏–±—É—Ö—É‚Äù —Ñ—ñ–≥—É—Ä –ø—Ä–∏ –∫–ª—ñ–∫—É.

// üí° –¶—ñ–∫–∞–≤—ñ –µ—Ñ–µ–∫—Ç–∏
	// 	üåå –°—Ç–≤–æ—Ä–∏—Ç–∏ –µ—Ñ–µ–∫—Ç "–∑–æ—Ä—è–Ω–æ–≥–æ –Ω–µ–±–∞" –∞–±–æ "–ø–∞–¥–∞—é—á–æ–≥–æ –¥–æ—â—É"
	// 	üåå –°—Ç–≤–æ—Ä–∏—Ç–∏ –µ—Ñ–µ–∫—Ç "–ø–∞–¥–∞—é—á–æ–≥–æ –¥–æ—â—É"
	// 	üåå –°—Ç–≤–æ—Ä–∏—Ç–∏ –µ—Ñ–µ–∫—Ç "–ø–∞–¥–∞—é—á–∏—Ö —Å–Ω—ñ–∂–∏–Ω–æ–∫"
	// 	üêç –†–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –º—ñ–Ω—ñ - –∑–º—ñ–π–∫—É –∞–±–æ –∫—É–ª—é, —â–æ —Ä—É—Ö–∞—î—Ç—å—Å—è –ø–æ —Å–∏–Ω—É—Å–æ—ó–¥—ñ

//!-------------------------------------------------------------------------------------------------
// üß± –ë–∞–∑–æ–≤–µ –∑–Ω–∞–π–æ–º—Å—Ç–≤–æ –∑ canvas
	
const baseCanvas = document.getElementById('base-canvas')

// –í–∫–∞–∑—É—î–º–æ –≤–∏—Å–æ—Ç—É
baseCanvas.height = "200"
// –í–∫–∞–∑—É—î–º–æ —à–∏—Ä–∏–Ω—É
baseCanvas.width = "200"
// HTML-–∞—Ç—Ä–∏–±—É—Ç moz-opaque –µ–ª–µ–º–µ–Ω—Ç–∞ <canvas> –ø–æ–≤—ñ–¥–æ–º–ª—è—î –ø–æ–ª–æ—Ç–Ω—É —á–∏ –±—É–¥–µ –ø—Ä–∏—Å—É—Ç–Ω—è –ø—Ä–æ–∑–æ—Ä—ñ—Å—Ç—å
// baseCanvas.mozOpaque = true
// getContext("2d") –¥–æ–∑–≤–æ–ª—è—î –º–∞–ª—é–≤–∞—Ç–∏ –Ω–∞ –ø–æ–ª–æ—Ç–Ω—ñ
const ctx = baseCanvas.getContext("2d")

//!-------------------------------------------------------------------------------------------------

// ‚úèÔ∏è –ù–∞–º–∞–ª—é–≤–∞—Ç–∏ –ø—Ä–æ—Å—Ç—É –ª—ñ–Ω—ñ—é.
// –ü–æ—á–∏–Ω–∞—î–º–æ —à–ª—è—Ö
ctx.beginPath()
// –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ä—Ç–æ–≤—É —Ç–æ—á–∫—É
ctx.moveTo(10, 10)
// –ú–∞–ª—é—î–º–æ –ª—ñ–Ω—ñ—é –¥–æ –Ω–æ–≤–æ—ó —Ç–æ—á–∫–∏
ctx.lineTo(190, 190)
// –ó–∞–¥–∞—î–º–æ –∫–æ–ª—ñ—Ä –ª—ñ–Ω—ñ—ó
ctx.strokeStyle = 'black'
// –ú–∞–ª—é—î–º–æ –ª—ñ–Ω—ñ—é
ctx.stroke()

// –î–æ–¥–∞–ª–∞ —â–µ –ª—ñ–Ω—ñ—é —ñ –≤–∏–π—à–æ–≤ —Ö—Ä–µ—Å—Ç–∏–∫
ctx.beginPath()
// –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ä—Ç–æ–≤—É —Ç–æ—á–∫—É
ctx.moveTo(10, 190)
// –ú–∞–ª—é—î–º–æ –ª—ñ–Ω—ñ—é –¥–æ –Ω–æ–≤–æ—ó —Ç–æ—á–∫–∏
ctx.lineTo(190, 10)
// –ó–∞–¥–∞—î–º–æ –∫–æ–ª—ñ—Ä –ª—ñ–Ω—ñ—ó
ctx.strokeStyle = 'black'
// –ú–∞–ª—é—î–º–æ –ª—ñ–Ω—ñ—é
ctx.stroke()

//!-------------------------------------------------------------------------------------------------

// ‚ö´ –ù–∞–º–∞–ª—é–≤–∞—Ç–∏ –∫–æ–ª–æ —Ç–∞ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫.
// –ü—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫
ctx.fillStyle = "#ff23ff" // –∫–æ–ª—ñ—Ä –∑–∞–ª–∏–≤–∫–∏
ctx.fillRect(85, 100, 30, 50) // x, y, width, height
// –ö–æ–ª–æ
ctx.beginPath()
ctx.arc(40, 50, 20, 0, Math.PI * 2) // x, y, —Ä–∞–¥—ñ—É—Å, —Å—Ç–∞—Ä—Ç–æ–≤–∏–π –∫—É—Ç, –∫—ñ–Ω–µ—Ü—å
ctx.fillStyle = '#ccc'
ctx.fill()

// –ö–æ–ª–æ
ctx.beginPath()
ctx.arc(40, 50, 5, 0, Math.PI * 2) // x, y, —Ä–∞–¥—ñ—É—Å, —Å—Ç–∞—Ä—Ç–æ–≤–∏–π –∫—É—Ç, –∫—ñ–Ω–µ—Ü—å
ctx.fillStyle = 'black'
ctx.fill()

// –ö–æ–ª–æ
ctx.beginPath()
ctx.arc(150, 50, 20, 0, Math.PI * 2) // x, y, —Ä–∞–¥—ñ—É—Å, —Å—Ç–∞—Ä—Ç–æ–≤–∏–π –∫—É—Ç, –∫—ñ–Ω–µ—Ü—å
ctx.fillStyle = '#ccc'
ctx.fill()

// –ö–æ–ª–æ
ctx.beginPath()
ctx.arc(150, 50, 5, 0, Math.PI * 2) // x, y, —Ä–∞–¥—ñ—É—Å, —Å—Ç–∞—Ä—Ç–æ–≤–∏–π –∫—É—Ç, –∫—ñ–Ω–µ—Ü—å
ctx.fillStyle = 'black'
ctx.fill()

// üé® –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —Ä—ñ–∑–Ω—ñ –∫–æ–ª—å–æ—Ä–∏ –∑–∞–ª–∏–≤–∫–∏(fillStyle) —Ç–∞ –æ–±–≤–æ–¥–∫–∏(strokeStyle).
ctx.beginPath();
ctx.rect(20, 170, 160, 20); // x, y, width, height
ctx.fillStyle = 'pink';
ctx.fill();
ctx.lineWidth = 5
ctx.strokeStyle = 'red'
ctx.stroke()

// –ù–∞–ø–∏—Å–∞—Ç–∏ —Ç–µ–∫—Å—Ç –Ω–∞ canvas.
ctx.fillStyle = 'yellow'
ctx.font = '68px Arial'
ctx.fillText('JS', 60, 120)

//!-------------------------------------------------------------------------------------------------

// üß© –†–æ–±–æ—Ç–∞ –∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ —Ç–∞ —Ñ–æ—Ä–º–∞–º–∏
const formCanvas = document.getElementById('form-canvas')
// –í–∫–∞–∑—É—î–º–æ –≤–∏—Å–æ—Ç—É
formCanvas.height = "200"
// –í–∫–∞–∑—É—î–º–æ —à–∏—Ä–∏–Ω—É
formCanvas.width = "200"

const formCtx = formCanvas.getContext("2d")

formCtx.fillStyle = "#eeee2f"
formCtx.fillRect(0, 0, formCanvas.width, formCanvas.height)

function drawGrid (step = 20) {
	formCtx.strokeStyle = '#141414'
	formCtx.lineWidth = 1

	for (let x = 0; x <= formCanvas.width; x += step) {
		formCtx.beginPath()
		formCtx.moveTo(x, 0)
		formCtx.lineTo(x, formCanvas.height)
		formCtx.stroke()
	}

	for (let y = 0; y <= formCanvas.height; y += step) {
		formCtx.beginPath()
		formCtx.moveTo(0, y)
		formCtx.lineTo(formCanvas.width, y)
		formCtx.stroke()
	}
}

drawGrid()

formCanvas.addEventListener('click', (event) => {
	// –æ—Ç—Ä–∏–º—É—î–º–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞
	const rect = formCanvas.getBoundingClientRect()
	const x = event.clientX - rect.left
	const y = event.clientY - rect.top

	// –º–∞–ª—é—î–º–æ —Ç–æ—á–∫—É
	formCtx.beginPath()
	formCtx.arc(x, y, 10, 0, Math.PI * 2)
	formCtx.fillStyle = 'pink'
	formCtx.fill()

	// –ø–æ–∫–∞–∑—É—î–º–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ —Ç–æ—á–∫–∏
	formCtx.fillStyle = '#1A1A1A'
	formCtx.font = '12px Arial'
	formCtx.fillText(`${Math.round(x)}, ${Math.round(y)}`, x + 10, y - 10)
})

//!-------------------------------------------------------------------------------------------------

// üåÄ –ê–Ω—ñ–º–∞—Ü—ñ—ó

const animCanvas = document.getElementById('anim-canvas')
// –í–∫–∞–∑—É—î–º–æ –≤–∏—Å–æ—Ç—É
animCanvas.height = "200"
// –í–∫–∞–∑—É—î–º–æ —à–∏—Ä–∏–Ω—É
animCanvas.width = "200"

const animCtx = animCanvas.getContext("2d")

// –ö–æ–ª–æ
let ball = {
	x: 50,
	y: 50,
	radius: 20,
	dx: 3, // —à–≤–∏–¥–∫—ñ—Å—Ç—å –ø–æ x
	dy: 2, // —à–≤–∏–¥–∫—ñ—Å—Ç—å –ø–æ y
	color: '#ff0000'
}

// –§—É–Ω–∫—Ü—ñ—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ –∫–æ–ª—å–æ—Ä—É
function getRandomColor() {
	const letters = "0123456789ABCDEF"

	let color = '#'
	for (let i = 0; i < 6; i++) {
		color += letters[Math.floor(Math.random() * 16)]
	}

	return color
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–Ω—ñ–º–∞—Ü—ñ—ó

function animate() {
	animCtx.clearRect(0, 0, animCanvas.width, animCanvas.height)

	// –ú–∞–ª—é—î–º–æ –∫–æ–ª–æ
	animCtx.beginPath()
	animCtx.arc(ball.x, ball.y, ball.radius, 0, Math.PI * 2)
	animCtx.fillStyle = ball.color
	animCtx.fill()

	// –ó–º—ñ–Ω—é—î–º–æ –ø–æ–∑–∏—Ü—ñ—é
	ball.x += ball.dx
	ball.y += ball.dy

	// –í—ñ–¥—Å–∫–æ–∫–∏ –º'—è—á–∞ –∞–Ω—ñ–º–∞—Ü—ñ—è
	if (ball.x + ball.radius > animCanvas.width || ball.x - ball.radius < 0) {
		// –∑–º—ñ–Ω–∞ –Ω–∞–ø—Ä—è–º–∫—É —Ä—É—Ö—É –∫–æ–ª–∞ –ø–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ–π –æ—Å—ñ
		// –ù–∞–ø—Ä–∏–∫–ª–∞–¥:
		// –Ø–∫—â–æ dx = 3, –∫—É–ª—è —Ä—É—Ö–∞—î—Ç—å—Å—è –≤–ø—Ä–∞–≤–æ.
		// –Ø–∫—â–æ dx = -3, –≤–æ–Ω–∞ —Ä—É—Ö–∞—î—Ç—å—Å—è –≤–ª—ñ–≤–æ.
		ball.dx = -ball.dx
		ball.color = getRandomColor() //–∑–º—ñ–Ω—é—î–º–æ –∫–æ–ª—ñ—Ä –ø—Ä–∏ –∑—ñ—Ç–∫–Ω–µ–Ω–Ω—ñ
	}

	if (ball.y + ball.radius > animCanvas.height || ball.y - ball.radius < 0) {
		ball.dy = -ball.dy
		ball.color = getRandomColor() //–∑–º—ñ–Ω—é—î–º–æ –∫–æ–ª—ñ—Ä –ø—Ä–∏ –∑—ñ—Ç–∫–Ω–µ–Ω–Ω—ñ
	}

	requestAnimationFrame(animate) //—Ä–µ–∫—É—Ä—Å–∏–≤–Ω–∏–π –≤–∏–∫–ª–∏–∫ - –æ–∑–Ω–∞—á–∞—î: "–ø—ñ—Å–ª—è —Ü—å–æ–≥–æ –∫–∞–¥—Ä—É, –ø–æ–∫–∞–∂–∏ –Ω–∞—Å—Ç—É–ø–Ω–∏–π, –∑–Ω–æ–≤—É –≤–∏–∫–ª–∏–∫–∞–≤—à–∏ animate()".

	// üåÄ requestAnimationFrame(animate)
	// –¶–µ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –≤—ñ–¥ –±—Ä–∞—É–∑–µ—Ä–∞, —è–∫–∞:
	// –í–∏–∫–ª–∏–∫–∞—î –∞–Ω—ñ–º–∞—Ü—ñ–π–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é(–≤ –Ω–∞—à–æ–º—É –≤–∏–ø–∞–¥–∫—É animate) –±–ª–∏–∑—å–∫–æ 60 —Ä–∞–∑—ñ–≤ –Ω–∞ —Å–µ–∫—É–Ω–¥—É.
	// –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—î—Ç—å—Å—è –∑ —á–∞—Å—Ç–æ—Ç–æ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –º–æ–Ω—ñ—Ç–æ—Ä–∞.
	// –ï—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—à–∞ —Ç–∞ –ø–ª–∞–≤–Ω—ñ—à–∞, –Ω—ñ–∂ setInterval.
}

// –ó–∞–ø—É—Å–∫ –∞–Ω—ñ–º–∞—Ü—ñ—ó üîõ
animate()

//!-------------------------------------------------------------------------------------------------

// üñ±Ô∏è –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å
const writeCanvas = document.getElementById('write-on-canvas')
// –í–∫–∞–∑—É—î–º–æ –≤–∏—Å–æ—Ç—É
writeCanvas.height = "200"
// –í–∫–∞–∑—É—î–º–æ —à–∏—Ä–∏–Ω—É
writeCanvas.width = "200"

const writeCtx = writeCanvas.getContext("2d")
writeCtx.fillStyle = '#eee'
writeCtx.fillRect(0, 0, writeCanvas.width, writeCanvas.height);


// –ú–∞–ª—é—î–º–æ –ª—ñ–Ω—ñ—ó –º–∏—à–µ—é
let isDrawing = false
let prevX = 0
let prevY = 0

writeCanvas.addEventListener('mousedown', (e) => {
	isDrawing = true
	prevX = e.offsetX
	prevY = e.offsetY
})

writeCanvas.addEventListener('mouseup', () => {
	isDrawing = false
})

writeCanvas.addEventListener('mousemove', (e) => {
	if (isDrawing) {
		writeCtx.beginPath()
		writeCtx.moveTo(prevX, prevY)
		writeCtx.lineTo(e.offsetX, e.offsetY)
		interactiveCtx.strokeStyle = '#fff'
		writeCtx.lineWidth = 3
		writeCtx.stroke()
		prevX = e.offsetX
		prevY = e.offsetY
	}
})

//!-------------------------------------------------------------------------------------------------

// üñ±Ô∏è –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å
const interactiveCanvas = document.getElementById('interactive-canvas')
// –í–∫–∞–∑—É—î–º–æ –≤–∏—Å–æ—Ç—É
interactiveCanvas.height = "200"
// –í–∫–∞–∑—É—î–º–æ —à–∏—Ä–∏–Ω—É
interactiveCanvas.width = "200"

const interactiveCtx = interactiveCanvas.getContext("2d")

// –ö–æ–ª–æ
let ballNew = {
	x: 50,
	y: 50,
	radius: 20,
	dx: 3,
	dy: 2, 
	color: '#ff0000'
}

let particles = []

function createExplosion(x, y) {
	for (let i = 0; i < 20; i++) {
		particles.push({
			x,
			y,
			radius: Math.random() * 3 + 2,
			color: `hsl(${Math.random() * 360}, 100%, 50%)`,
			dx: (Math.random() - 0.5) * 6,
			dy: (Math.random() - 0.5) * 6,
			alpha: 1
		})
	}
}

function drawParticles() {
	for (let i = 0; i < particles.length; i++) {
		let p = particles[i]

		interactiveCtx.globalAlpha = p.alpha
		interactiveCtx.beginPath()
		interactiveCtx.arc(p.x, p.y, p.radius, 0, Math.PI * 2)
		interactiveCtx.fillStyle = p.color
		interactiveCtx.fill()
		p.x += p.dx
		p.y += p.dy
		p.alpha -= 0.02
	}
	interactiveCtx.globalAlpha = 1
	particles = particles.filter(p => p.alpha > 0)
}

// –í–∏—è–≤–ª–µ–Ω–Ω—è –∫–ª—ñ–∫—É –ø–æ –º'—è—á—É
interactiveCanvas.addEventListener('click', (e) => {
	const dx = e.offsetX - ballNew.x;
	const dy = e.offsetY - ballNew.y;
	const distance = Math.sqrt(dx * dx + dy * dy);
	if (distance < ballNew.radius) {
		console.log("–í–ª—É—á–∏–≤ —É –º'—è—á!");
		createExplosion(ballNew.x, ballNew.y);
	}
})

// üåÄ –ê–Ω—ñ–º–∞—Ü—ñ—è
function animateBall() {
	// Trail –µ—Ñ–µ–∫—Ç
	interactiveCtx.fillStyle = "orange";
	interactiveCtx.fillRect(0, 0, interactiveCanvas.width, interactiveCanvas.height);

	// –ú'—è—á
	interactiveCtx.beginPath();
	interactiveCtx.arc(ballNew.x, ballNew.y, ballNew.radius, 0, Math.PI * 2);
	interactiveCtx.fillStyle = ballNew.color;
	interactiveCtx.fill();

	// –†—É—Ö
	ballNew.x += ballNew.dx;
	ballNew.y += ballNew.dy;

	// –í—ñ–¥—Å–∫–æ–∫
	if (ballNew.x + ballNew.radius > interactiveCanvas.width || ballNew.x - ballNew.radius < 0) {
		ballNew.dx = -ballNew.dx;
	}
	if (ballNew.y + ballNew.radius > interactiveCanvas.height || ballNew.y - ballNew.radius < 0) {
		ballNew.dy = -ballNew.dy;
	}

	// –ß–∞—Å—Ç–∏–Ω–∫–∏ –≤–∏–±—É—Ö—É
	drawParticles();

	requestAnimationFrame(animateBall);
}

animateBall()



//!-------------------------------------------------------------------------------------------------

// –ó–æ—Ä—è–Ω–µ –Ω–µ–±–æ - –µ—Ñ–µ–∫—Ç
const starsCanvas = document.getElementById('stars')
const starsCtx = starsCanvas.getContext("2d")


// –°—Ç–≤–æ—Ä—é—î–º–æ –º–∞—Å–∏–≤ –∑—ñ—Ä–æ–∫
const stars = []
for (let i = 0; i < 100; i++) {
	stars.push({
		x: Math.random() * starsCanvas.width, // –≤–∏–ø–∞–¥–∫–æ–≤–∞ –ø–æ–∑–∏—Ü—ñ—è –ø–æ X
		y: Math.random() * starsCanvas.height, // –≤–∏–ø–∞–¥–∫–æ–≤–∞ –ø–æ–∑–∏—Ü—ñ—è –ø–æ Y
		radius: Math.random() * 1.5, // –≤–∏–ø–∞–¥–∫–æ–≤–∏–π —Ä–∞–¥—ñ—É—Å –∑—ñ—Ä–∫–∏
		alpha: Math.random() // –ø–æ—á–∞—Ç–∫–æ–≤–∞ –ø—Ä–æ–∑–æ—Ä—ñ—Å—Ç—å (–º–µ—Ä–µ—Ö—Ç—ñ–Ω–Ω—è)
	})
}

// –§—É–Ω–∫—Ü—ñ—è –º–∞–ª—é–≤–∞–Ω–Ω—è –∑—ñ—Ä–æ–∫
function drawStars() {
	starsCtx.clearRect(0, 0, starsCanvas.width, starsCanvas.height) // –æ—á–∏—â—É—î–º–æ –≤–µ—Å—å canvas

	for (let star of stars) {
		starsCtx.beginPath()
		starsCtx.arc(star.x, star.y, star.radius, 0, Math.PI * 2) // –º–∞–ª—é—î–º–æ –∫–æ–ª–æ
		starsCtx.fillStyle = `rgba(255, 255, 255, ${star.alpha})` // –±—ñ–ª–∏–π –∫–æ–ª—ñ—Ä –∑ –ø—Ä–æ–∑–æ—Ä—ñ—Å—Ç—é
		starsCtx.fill()

		// –ó–º—ñ–Ω—é—î–º–æ –ø—Ä–æ–∑–æ—Ä—ñ—Å—Ç—å –¥–ª—è –µ—Ñ–µ–∫—Ç—É –º–µ—Ä–µ—Ö—Ç—ñ–Ω–Ω—è
		star.alpha += (Math.random() - 0.5) * 0.05 // –∫–æ–ª–∏–≤–∞–Ω–Ω—è –ø—Ä–æ–∑–æ—Ä–æ—Å—Ç—ñ
		if (star.alpha < 0.1) star.alpha = 0.1 // –º–µ–∂–∞ –∑–Ω–∏–∑—É
		if (star.alpha > 1) star.alpha = 1 // –º–µ–∂–∞ –∑–≤–µ—Ä—Ö—É
	}

	requestAnimationFrame(drawStars) // –ø–æ–≤—Ç–æ—Ä—é—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é
}
drawStars() // –∑–∞–ø—É—Å–∫–∞—î–º–æ –∑–æ—Ä—è–Ω–µ –Ω–µ–±–æ


//!-------------------------------------------------------------------------------------------------

// –ü–∞–¥–∞—é—á–∏–π –¥–æ—â - –µ—Ñ–µ–∫—Ç
const rainCanvas = document.getElementById('rain')
const rainCtx = rainCanvas.getContext("2d")

// –°—Ç–≤–æ—Ä—é—î–º–æ –º–∞—Å–∏–≤ –∫—Ä–∞–ø–µ–ª—å –¥–æ—â—É
const rainDrops = []
for (let i = 0; i < 200; i++) {
	rainDrops.push({
		x: Math.random() * rainCanvas.width, // –ø–æ–∑–∏—Ü—ñ—è –ø–æ X
		y: Math.random() * rainCanvas.height, // –ø–æ–∑–∏—Ü—ñ—è –ø–æ Y
		length: Math.random() * 20 + 10, // –¥–æ–≤–∂–∏–Ω–∞ –∫—Ä–∞–ø–ª—ñ
		speed: Math.random() * 4 + 4 // —à–≤–∏–¥–∫—ñ—Å—Ç—å –ø–∞–¥—ñ–Ω–Ω—è
	})
}

// –§—É–Ω–∫—Ü—ñ—è –º–∞–ª—é–≤–∞–Ω–Ω—è –¥–æ—â—É
function drawRain() {
	rainCtx.clearRect(0, 0, rainCanvas.width, rainCanvas.height) // –æ—á–∏—â–µ–Ω–Ω—è canvas

	rainCtx.strokeStyle = 'rgba(174,194,224,0.5)' // –∫–æ–ª—ñ—Ä –¥–æ—â—É
	rainCtx.lineWidth = 1 // —Ç–æ–≤—â–∏–Ω–∞ –ª—ñ–Ω—ñ—ó

	for (let drop of rainDrops) {
		rainCtx.beginPath()
		rainCtx.moveTo(drop.x, drop.y) // –ø–æ—á–∞—Ç–æ–∫ –∫—Ä–∞–ø–ª—ñ
		rainCtx.lineTo(drop.x, drop.y + drop.length) // –∫—ñ–Ω–µ—Ü—å –∫—Ä–∞–ø–ª—ñ
		rainCtx.stroke()

		drop.y += drop.speed // –ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è –∫—Ä–∞–ø–ª—ñ –≤–Ω–∏–∑

		// –Ø–∫—â–æ –∫—Ä–∞–ø–ª—è –≤–∏–π—à–ª–∞ –∑–∞ –º–µ–∂—ñ ‚Äî –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –≤–≥–æ—Ä—É
		if (drop.y > rainCanvas.height) {
			drop.y = -drop.length // –ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è –∑–∞ –º–µ–∂—ñ –∑–≤–µ—Ä—Ö—É
			drop.x = Math.random() * rainCanvas.width // –Ω–æ–≤–∞ –≤–∏–ø–∞–¥–∫–æ–≤–∞ –ø–æ–∑–∏—Ü—ñ—è –ø–æ X
		}
	}
	requestAnimationFrame(drawRain) // –ø–æ–≤—Ç–æ—Ä–µ–Ω–Ω—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
}
drawRain() // –∑–∞–ø—É—Å–∫–∞—î–º–æ –µ—Ñ–µ–∫—Ç –¥–æ—â—É


//!-------------------------------------------------------------------------------------------------

// –ü–∞–¥–∞—é—á—ñ —Å–Ω—ñ–∂–∏–Ω–∫–∏ - –µ—Ñ–µ–∫—Ç
const snowflakesCanvas = document.getElementById('snowflakes')
const snowflakesCtx = snowflakesCanvas.getContext("2d")


// –°—Ç–≤–æ—Ä—é—î–º–æ –º–∞—Å–∏–≤ —Å–Ω—ñ–∂–∏–Ω–æ–∫
const snowflakes = []
for (let i = 0; i < 5000; i++) {
	snowflakes.push({
		x: Math.random() * snowflakesCanvas.width, // X-–ø–æ–∑–∏—Ü—ñ—è
		y: Math.random() * snowflakesCanvas.height, // Y-–ø–æ–∑–∏—Ü—ñ—è
		radius: Math.random() * 3 + 1, // —Ä–∞–¥—ñ—É—Å —Å–Ω—ñ–∂–∏–Ω–∫–∏
		speedY: Math.random() * 1 + 0.5, // —à–≤–∏–¥–∫—ñ—Å—Ç—å –ø–∞–¥—ñ–Ω–Ω—è
		angle: Math.random() * 2 * Math.PI, // –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –∫—É—Ç (–¥–ª—è –∫–æ–ª–∏–≤–∞–Ω—å)
		angleSpeed: Math.random() * 0.01 + 0.005 // —à–≤–∏–¥–∫—ñ—Å—Ç—å –∑–º—ñ–Ω–∏ –∫—É—Ç–∞
	})
}

// –§—É–Ω–∫—Ü—ñ—è –º–∞–ª—é–≤–∞–Ω–Ω—è —Å–Ω—ñ–∂–∏–Ω–æ–∫
function drawSnowflakes() {
	snowflakesCtx.clearRect(0, 0, snowflakesCanvas.width, snowflakesCanvas.height) // –æ—á–∏—â–µ–Ω–Ω—è

	snowflakesCtx.fillStyle = '#fff' // –±—ñ–ª–∏–π –∫–æ–ª—ñ—Ä —Å–Ω—ñ–≥—É

	for (let flake of snowflakes) {
		flake.angle += flake.angleSpeed // –∑–º—ñ–Ω—é—î–º–æ –∫—É—Ç
		flake.y += flake.speedY // —Ä—É—Ö –≤–Ω–∏–∑
		flake.x += Math.sin(flake.angle) // –ø–ª–∞–≤–Ω–∏–π –∫–æ–ª–∏–≤–∞–ª—å–Ω–∏–π —Ä—É—Ö –≤–ª—ñ–≤–æ-–≤–ø—Ä–∞–≤–æ

		// –Ø–∫—â–æ —Å–Ω—ñ–∂–∏–Ω–∫–∞ –≤–ø–∞–ª–∞ ‚Äî –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –Ω–∞–≤–µ—Ä—Ö
		if (flake.y > snowflakesCanvas.height) {
			flake.y = -flake.radius
			flake.x = Math.random() * snowflakesCanvas.width
		}

		snowflakesCtx.beginPath()
		snowflakesCtx.arc(flake.x, flake.y, flake.radius, 0, Math.PI * 2) // –º–∞–ª—é—î–º–æ –∫–æ–ª–æ
		snowflakesCtx.fill()
	}
	requestAnimationFrame(drawSnowflakes) // –∞–Ω—ñ–º–∞—Ü—ñ—è
}
drawSnowflakes() // –∑–∞–ø—É—Å–∫–∞—î–º–æ –µ—Ñ–µ–∫—Ç —Å–Ω—ñ–≥—É

//!-------------------------------------------------------------------------------------------------

// –†—É—Ö –∑–º—ñ–π–∫–∏ - –µ—Ñ–µ–∫—Ç
const snakeCanvas = document.getElementById('snake')
const snakeCtx = snakeCanvas.getContext("2d")

// –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–º—ñ–π–∫–∏
const snakeLength = 30 // –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å–µ–≥–º–µ–Ω—Ç—ñ–≤ —Ç—ñ–ª–∞
const snakeSegments = [] // –º–∞—Å–∏–≤ –¥–ª—è —Å–µ–≥–º–µ–Ω—Ç—ñ–≤

let snakeHeadX = 0 // –ø–æ—á–∞—Ç–∫–æ–≤–∞ –ø–æ–∑–∏—Ü—ñ—è –≥–æ–ª–æ–≤–∏ –ø–æ X
let angle = 0 // –∫—É—Ç –¥–ª—è —Å–∏–Ω—É—Å–∞

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∑–º—ñ–π–∫–∏
for (let i = 0; i < snakeLength; i++) {
	snakeSegments.push({ x: 0, y: 0 })
}

// –ú–∞–ª—é—î–º–æ –∑–º—ñ–π–∫—É —è–∫ –ª–∞–Ω—Ü—é–∂–æ–∫ –∫—Ä—É–∂–∫—ñ–≤
function drawSnake() {
	snakeCtx.clearRect(0, 0, snakeCanvas.width, snakeCanvas.height)

	// –ó–±—ñ–ª—å—à—É—î–º–æ –∫—É—Ç —ñ –ø—Ä–æ—Å—É–≤–∞—î–º–æ –≥–æ–ª–æ–≤—É
	angle += 0.1
	snakeHeadX += 2
	const headY = snakeCanvas.height / 2 + Math.sin(angle) * 40

	// –î–æ–¥–∞—î–º–æ –Ω–æ–≤—É "–≥–æ–ª–æ–≤—É" –≤ –ø–æ—á–∞—Ç–æ–∫ —Å–ø–∏—Å–∫—É
	snakeSegments.unshift({ x: snakeHeadX, y: headY })

	// –û–±–º–µ–∂—É—î–º–æ –¥–æ–≤–∂–∏–Ω—É —Ç—ñ–ª–∞ (—â–æ–± "—Ö–≤—ñ—Å—Ç" –∑–Ω–∏–∫–∞–≤)
	if (snakeSegments.length > snakeLength) {
		snakeSegments.pop()
	}

	// –ú–∞–ª—é—î–º–æ –≤—Å—ñ —Å–µ–≥–º–µ–Ω—Ç–∏ —è–∫ –∫—Ä—É–∂–µ—á–∫–∏
	for (let i = 0; i < snakeSegments.length; i++) {
		const segment = snakeSegments[i]
		snakeCtx.beginPath()
		snakeCtx.arc(segment.x, segment.y, 6, 0, Math.PI * 2)
		// –ß–∏–º –¥–∞–ª—ñ –≤—ñ–¥ –≥–æ–ª–æ–≤–∏ ‚Äî —Ç–∏–º –ø—Ä–æ–∑–æ—Ä—ñ—à–∏–π –∫–æ–ª—ñ—Ä
		const alpha = 1 - i / snakeLength
		snakeCtx.fillStyle = `rgba(0, 255, 0, ${alpha})`
		snakeCtx.fill()
	}

	// –Ø–∫—â–æ –∑–º—ñ–π–∫–∞ –≤–∏–π—à–ª–∞ –∑–∞ –º–µ–∂—ñ –ø—Ä–∞–≤–æ—Ä—É—á ‚Äî –ø–æ—á–∏–Ω–∞—î–º–æ –∑–ª—ñ–≤–∞
	if (snakeHeadX > snakeCanvas.width + 50) {
		snakeHeadX = -50
		snakeSegments.length = 0 // –æ–±–Ω—É–ª—è—î–º–æ –º–∞—Å–∏–≤
	}
	requestAnimationFrame(drawSnake)
}
drawSnake()
