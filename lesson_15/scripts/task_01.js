"use strict"

// –ó–∞–¥–∞—á–∞ 01. –°—Ç–≤–æ—Ä–∏—Ç–∏ –æ–±‚Äô—î–∫—Ç ¬´–¢–∏—Ä¬ª. –£ –º–∞—Å–∏–≤—ñ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è 1, —è–∫—â–æ —É —Ü—å–æ–º—É –∫–≤–∞–¥—Ä–∞—Ç—ñ —î –∑–∞—î—Ü—å —ñ 0 –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É.
// –¢–∏—Ä
// –ü–æ–ª—è(–≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ)
// –ú–∞—Å–∏–≤, —É —è–∫–æ–º—É –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è –ø–æ–ª–µ –∑ –∑–∞–π—Ü—è–º–∏

// –ú–µ—Ç–æ–¥–∏(–¥—ñ—ó)
// –ú–µ—Ç–æ–¥ –ø–æ—Å—Ç—Ä—ñ–ª—É(–∑–∞–¥–∞—î—Ç—å—Å—è –ø–æ–∑–∏—Ü—ñ—è –ø–æ—Å—Ç—Ä—ñ–ª—É)
// –í–∏–≤–µ–¥–µ–Ω–Ω—è —ñ–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è

if (confirm('–ü–æ—á–∞—Ç–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è?')) {
	const range = {
		field: [],
		rabbitNumber: 7,

		getField: function (number) {
			for (let i = 0; i < number; i++) {
				this.field.push(new Array(number).fill('ü•ï'))
			}
		},

		getPositionForRabbit: function (min = 0, max = this.field.length - 1) {
			return Math.floor(Math.random() * (max - min + 1)) + min
		},

		locateRabbits: function () {
			let rabbitCount = 0
			while (rabbitCount < this.rabbitNumber) {
				let x = this.getPositionForRabbit()
				let y = this.getPositionForRabbit()

				if (this.field[x][y] === 'ü•ï') {
					this.field[x][y] = 'üê∞'
					rabbitCount++
				}
			}
			return this.field
		},

		renderTable: function () {
			let table = '<table>'

			for (let row of this.field) {
				table += '<tr>'

				for (let col of row) {
					table += `<td>${col}</td>`
				}

				table += '</tr>'
			}

			table += '</table>'

			return table
		},

		shootRabbit: function (shells) {
			let count = 0
			do {
				const x = parseInt(prompt(`–í–≤–µ–¥—ñ—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É X –ø–æ—Å—Ç—Ä—ñ–ª—É –≤—ñ–¥ 1 –¥–æ ${this.field.length}`, '5'))
				const y = parseInt(prompt(`–í–≤–µ–¥—ñ—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É Y –ø–æ—Å—Ç—Ä—ñ–ª—É –≤—ñ–¥ 1 –¥–æ ${this.field.length}`, '5'))

				// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥—ñ–∞–ø–∞–∑–æ–Ω—É –≤–≤–µ–¥–µ–Ω–∏—Ö –¥–∞–Ω–∏—Ö
				if (x < 1 || x > this.field.length || y < 1 || y > this.field.length) {
					alert('–í–∏ –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—ñ –¥–∞–Ω—ñ!')
					continue
				}

				// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω–µ –≤–≤–µ–¥–µ–Ω–Ω—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
				if (this.field[x - 1][y - 1] === '‚ùå' || this.field[x - 1][y - 1] === '‚ö´') {
					alert('–í–∏ –≤–∂–µ —Å—Ç—Ä—ñ–ª—è–ª–∏ –≤ —Ü—é —Ç–æ—á–∫—É, —Å–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ!')
					continue
				}

				if (this.field[x - 1][y - 1] === 'üê∞') {
					alert('–í–∏ –≤–ª—É—á–∏–ª–∏ üéâ')
					this.field[x - 1][y - 1] = '‚ùå'
					this.rabbitNumber--
				} else {
					alert('–í–∏ –Ω–µ –≤–ª—É—á–∏–ª–∏ üôÅ')
					this.field[x - 1][y - 1] = '‚ö´'
				}

				shells--
				count++
				alert(`–£ –≤–∞—Å –∑–∞–ª–∏—à–∏–ª–æ—Å—å ${shells} —Å–Ω–∞—Ä—è–¥—ñ–≤`)

				document.write(`<span>–ü–æ–ª–µ –ø—ñ—Å–ª—è ${count} —Å–ø—Ä–æ–±–∏</span>`)
				document.write(this.renderTable())

			} while (this.rabbitNumber > 0 && shells > 0)
		}
	}
	range.getField(7)
	range.locateRabbits(7)
	range.shootRabbit(3)

	document.write(range.renderTable())

}